{"ast":null,"code":"var _jsxFileName = \"C:\\\\web dev\\\\Neutron_CodeHers\\\\frontend\\\\src\\\\Components\\\\AddCollaborators.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { auth } from '../firebase';\nimport { doc, setDoc } from 'firebase/firestore';\nimport { db } from '../firebase';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate hook\nimport './AddCollaborators.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddCollaborators = () => {\n  _s();\n  const [adminId, setAdminId] = useState('');\n  const [collaborators, setCollaborators] = useState([{\n    email: '',\n    password: ''\n  }]);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate(); // Initialize useNavigate hook\n\n  useEffect(() => {\n    const user = auth.currentUser;\n    if (user) {\n      setAdminId(user.uid);\n    } else {\n      alert('You must be logged in to add collaborators.');\n      window.location.href = 'login.html'; // use static redirect for non-logged-in users\n    }\n  }, []);\n  const handleChange = (i, field, value) => {\n    const updated = [...collaborators];\n    updated[i][field] = value;\n    setCollaborators(updated);\n  };\n  const handleAddField = () => {\n    // Add a new collaborator field only if the previous one is filled\n    const lastCollaborator = collaborators[collaborators.length - 1];\n    if (lastCollaborator.email && lastCollaborator.password) {\n      setCollaborators([...collaborators, {\n        email: '',\n        password: ''\n      }]);\n    } else {\n      alert('Please fill in the current collaborator fields before adding another.');\n    }\n  };\n  const handleSubmit = async () => {\n    setLoading(true);\n    const created = [];\n    for (let collab of collaborators) {\n      if (!collab.email || !collab.password) {\n        alert('Both email and password are required.');\n        setLoading(false);\n        return;\n      }\n      const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n      if (!emailPattern.test(collab.email)) {\n        alert(`Invalid email format for ${collab.email}`);\n        setLoading(false);\n        return;\n      }\n      try {\n        const res = await fetch('http://localhost:5000/create-collaborator', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: collab.email,\n            password: collab.password\n          })\n        });\n        const data = await res.json();\n        if (data.success) {\n          created.push({\n            email: collab.email,\n            uid: data.uid\n          });\n        } else {\n          alert(`Error for ${collab.email}: ${data.error}`);\n        }\n      } catch (error) {\n        console.error('Error creating collaborator:', error);\n        alert(`Error for ${collab.email}: Could not create collaborator.`);\n      }\n    }\n    if (created.length > 0) {\n      try {\n        await setDoc(doc(db, 'teams', adminId), {\n          adminId,\n          collaborators: created\n        });\n        alert('Collaborators added and saved!');\n\n        // Navigate to the ThemeSelector page instead of static redirect\n        navigate('/theme-selector'); // Programmatically navigate to the ThemeSelector page\n      } catch (error) {\n        console.error('Error adding collaborators to Firestore:', error);\n        alert('Error adding collaborators to Firestore.');\n      }\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add Collaborators\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), collaborators.map((collab, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collaborator-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Collaborator Email\",\n        value: collab.email,\n        onChange: e => handleChange(index, 'email', e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Collaborator Password\",\n        value: collab.password,\n        onChange: e => handleChange(index, 'password', e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-button\",\n      onClick: handleAddField,\n      disabled: !collaborators[collaborators.length - 1].email || !collaborators[collaborators.length - 1].password,\n      children: \"Add Collaborator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      disabled: loading,\n      children: loading ? 'Submitting...' : 'Submit'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(AddCollaborators, \"juUrkO6gyrlQwOEPKLJqhAyhYk0=\", false, function () {\n  return [useNavigate];\n});\n_c = AddCollaborators;\nexport default AddCollaborators;\nvar _c;\n$RefreshReg$(_c, \"AddCollaborators\");","map":{"version":3,"names":["React","useState","useEffect","auth","doc","setDoc","db","useNavigate","jsxDEV","_jsxDEV","AddCollaborators","_s","adminId","setAdminId","collaborators","setCollaborators","email","password","loading","setLoading","navigate","user","currentUser","uid","alert","window","location","href","handleChange","i","field","value","updated","handleAddField","lastCollaborator","length","handleSubmit","created","collab","emailPattern","test","res","fetch","method","headers","body","JSON","stringify","data","json","success","push","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","placeholder","onChange","e","target","required","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/web dev/Neutron_CodeHers/frontend/src/Components/AddCollaborators.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { auth } from '../firebase';\r\nimport { doc, setDoc } from 'firebase/firestore';\r\nimport { db } from '../firebase';\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate hook\r\nimport './AddCollaborators.css';  // Import the CSS file\r\n\r\nconst AddCollaborators = () => {\r\n  const [adminId, setAdminId] = useState('');\r\n  const [collaborators, setCollaborators] = useState([{ email: '', password: '' }]);\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate(); // Initialize useNavigate hook\r\n\r\n  useEffect(() => {\r\n    const user = auth.currentUser;\r\n    if (user) {\r\n      setAdminId(user.uid);\r\n    } else {\r\n      alert('You must be logged in to add collaborators.');\r\n      window.location.href = 'login.html'; // use static redirect for non-logged-in users\r\n    }\r\n  }, []);\r\n\r\n  const handleChange = (i, field, value) => {\r\n    const updated = [...collaborators];\r\n    updated[i][field] = value;\r\n    setCollaborators(updated);\r\n  };\r\n\r\n  const handleAddField = () => {\r\n    // Add a new collaborator field only if the previous one is filled\r\n    const lastCollaborator = collaborators[collaborators.length - 1];\r\n    if (lastCollaborator.email && lastCollaborator.password) {\r\n      setCollaborators([...collaborators, { email: '', password: '' }]);\r\n    } else {\r\n      alert('Please fill in the current collaborator fields before adding another.');\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    setLoading(true);\r\n    const created = [];\r\n\r\n    for (let collab of collaborators) {\r\n      if (!collab.email || !collab.password) {\r\n        alert('Both email and password are required.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\r\n      if (!emailPattern.test(collab.email)) {\r\n        alert(`Invalid email format for ${collab.email}`);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const res = await fetch('http://localhost:5000/create-collaborator', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ email: collab.email, password: collab.password }),\r\n        });\r\n\r\n        const data = await res.json();\r\n        if (data.success) {\r\n          created.push({ email: collab.email, uid: data.uid });\r\n        } else {\r\n          alert(`Error for ${collab.email}: ${data.error}`);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error creating collaborator:', error);\r\n        alert(`Error for ${collab.email}: Could not create collaborator.`);\r\n      }\r\n    }\r\n\r\n    if (created.length > 0) {\r\n      try {\r\n        await setDoc(doc(db, 'teams', adminId), {\r\n          adminId,\r\n          collaborators: created,\r\n        });\r\n        alert('Collaborators added and saved!');\r\n        \r\n        // Navigate to the ThemeSelector page instead of static redirect\r\n        navigate('/theme-selector'); // Programmatically navigate to the ThemeSelector page\r\n      } catch (error) {\r\n        console.error('Error adding collaborators to Firestore:', error);\r\n        alert('Error adding collaborators to Firestore.');\r\n      }\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <h1>Add Collaborators</h1>\r\n      {collaborators.map((collab, index) => (\r\n        <div key={index} className=\"collaborator-field\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Collaborator Email\"\r\n            value={collab.email}\r\n            onChange={(e) => handleChange(index, 'email', e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Collaborator Password\"\r\n            value={collab.password}\r\n            onChange={(e) => handleChange(index, 'password', e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n      ))}\r\n\r\n      {/* Add Collaborator button is only enabled when current fields are filled */}\r\n      <button className=\"add-button\" onClick={handleAddField} disabled={!collaborators[collaborators.length - 1].email || !collaborators[collaborators.length - 1].password}>\r\n        Add Collaborator\r\n      </button>\r\n\r\n      <button onClick={handleSubmit} disabled={loading}>\r\n        {loading ? 'Submitting...' : 'Submit'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddCollaborators;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}